/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * Exam Pass API
 * The Exam Pass API documentation
 * OpenAPI spec version: 1.0
 */
import axios from 'axios';
import type {
  AxiosRequestConfig,
  AxiosResponse
} from 'axios';




  export const getExamPassAPI = () => {
const appControllerGetHello = <TData = AxiosResponse<null>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/`,options
    ).then((res) => {if (res.data === "") res.data = null; return res as TData;});
  }

/**
 * @summary Create a new user
 */
const usersControllerCreate = <TData = AxiosResponse<null>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/users`,undefined,options
    ).then((res) => {if (res.data === "") res.data = null; return res as TData;});
  }

/**
 * @summary Get all users
 */
const usersControllerFindAll = <TData = AxiosResponse<null>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/users`,options
    ).then((res) => {if (res.data === "") res.data = null; return res as TData;});
  }

/**
 * @summary Get a user by ID
 */
const usersControllerFindOne = <TData = AxiosResponse<null>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/users/${id}`,options
    ).then((res) => {if (res.data === "") res.data = null; return res as TData;});
  }

/**
 * @summary Update a user
 */
const usersControllerUpdate = <TData = AxiosResponse<null>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.patch(
      `/users/${id}`,undefined,options
    ).then((res) => {if (res.data === "") res.data = null; return res as TData;});
  }

/**
 * @summary Delete a user
 */
const usersControllerRemove = <TData = AxiosResponse<null>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.delete(
      `/users/${id}`,options
    ).then((res) => {if (res.data === "") res.data = null; return res as TData;});
  }

return {appControllerGetHello,usersControllerCreate,usersControllerFindAll,usersControllerFindOne,usersControllerUpdate,usersControllerRemove}};
export type AppControllerGetHelloResult = AxiosResponse<null>
export type UsersControllerCreateResult = AxiosResponse<null>
export type UsersControllerFindAllResult = AxiosResponse<null>
export type UsersControllerFindOneResult = AxiosResponse<null>
export type UsersControllerUpdateResult = AxiosResponse<null>
export type UsersControllerRemoveResult = AxiosResponse<null>
